{"ast":null,"code":"var _jsxFileName = \"/Users/hunwon-lee/Desktop/kakao/react-router-back/frontend/src/pages/Events.jsx\",\n  _s = $RefreshSig$();\nimport { json, useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventsPage() {\n  _s();\n  const data = useLoaderData();\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/eventsxxx');\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events.' };\n    return json({\n      message: 'Could not fetch events.'\n    }, {\n      status: response.status\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["json","useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","events","_c","loader","response","fetch","ok","status","$RefreshReg$"],"sources":["/Users/hunwon-lee/Desktop/kakao/react-router-back/frontend/src/pages/Events.jsx"],"sourcesContent":["import { json, useLoaderData } from 'react-router-dom';\n\nimport EventsList from '../components/EventsList';\n\nexport default function EventsPage() {\n  const data = useLoaderData();\n\n  if (data.isError) {\n    return <p>{data.message}</p>;\n  }\n\n  const events = data.events;\n\n  return <EventsList events={events} />;\n}\n\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/eventsxxx');\n\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events.' };\n    return json(\n      { message: 'Could not fetch events.' },\n      {\n        status: response.status,\n      }\n    );\n  } else {\n    return response;\n  }\n}\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAEtD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAMC,IAAI,GAAGN,aAAa,CAAC,CAAC;EAE5B,IAAIM,IAAI,CAACC,OAAO,EAAE;IAChB,oBAAOJ,OAAA;MAAAK,QAAA,EAAIF,IAAI,CAACG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC9B;EAEA,MAAMC,MAAM,GAAGR,IAAI,CAACQ,MAAM;EAE1B,oBAAOX,OAAA,CAACF,UAAU;IAACa,MAAM,EAAEA;EAAO;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvC;AAACR,EAAA,CAVuBD,UAAU;EAAA,QACnBJ,aAAa;AAAA;AAAAe,EAAA,GADJX,UAAU;AAYlC,OAAO,eAAeY,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;EAE/D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA,OAAOpB,IAAI,CACT;MAAEU,OAAO,EAAE;IAA0B,CAAC,EACtC;MACEW,MAAM,EAAEH,QAAQ,CAACG;IACnB,CACF,CAAC;EACH,CAAC,MAAM;IACL,OAAOH,QAAQ;EACjB;AACF;AAAC,IAAAF,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}